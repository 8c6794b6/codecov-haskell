language: c

os: linux

cache:
  directories:
    - $HOME/.stack
    - $HOME/.cabal/packages
    - $HOME/.cabal/store

# addons:
#   apt:
#     packages:
#       - curl

# env:
#   jobs:
#     - EXEC="stack" RESOLVER="lts-14"

matrix:
  include:
    - env: EXEC="stack" RESOLVER="lts-14"
    - env: EXEC="cabal" GHCVER="8.8.2"
      addons:
        apt:
          packages:
            - cabal-install-3.0
            - ghc-8.8.2
          sources:
            - hvr-ghc

before_install:
  - mkdir -p ~/.local/bin
  - export PATH="$HOME/.local/bin:$PATH"
  - |
     case "$EXEC" in
       stack)
         travis_retry curl \
           -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | \
           tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
       ;;
       cabal)
         export PATH=/opt/ghc/bin:$PATH
       ;;
     esac

install:
  - |
    case "$EXEC" in
      stack)
        export STACK="stack --resolver=$RESOLVER"
        $STACK --version
        $STACK test --no-terminal --install-ghc --only-dependencies
        ;;
      cabal)
        which cabal
        which ghc
        cabal --version
        ghc --version
        travis_retry cabal v2-update
        ;;
    esac

  # - export STACK="stack --resolver=$RESOLVER"
  # - ${STACK} --version
  # - ${STACK} test --no-terminal --install-ghc --only-dependencies

script:
  - |
    case "$EXEC" in
      stack)
        echo stack=$STACK
        $STACK --no-terminal build --fast --test --coverage
        ;;
      cabal)
        cabal v2-configure --enable-tests --enable-coverage
        cabal v2-build
        cabal v2-test
        ;;
    esac

  # - echo stack=$STACK
  # - $STACK --no-terminal build --fast --test --coverage codecov-haskell

after_script:
  - |
    case "$EXEC" in
      stack)
        echo stack=$STACK
        STACK_HPC_ROOT=$($STACK path --local-hpc-root)
        STACK_DIST_DIR=$($STACK path --dist-dir)
        STACK_TIX=$STACK_HPC_ROOT/codecov-haskell/test-all/test-all.tix
        STACK_MIX_DIR=$STACK_DIST_DIR/hpc
        echo STACK_TIX=$STACK_TIX
        echo STACK_MIX_DIR=$STACK_MIX_DIR
        $STACK exec -- codecov-haskell \
          --tix=$STACK_TIX \
          --mix-dir=$STACK_MIX_DIR \
          --display-report \
          test-all
        ;;
      cabal)
        find ./dist-newstyle -name '*.tix'
        find ./dist-newstyle -name '*.mix'
        cabal v2-exec -- codecov-haskell --numeric-version
    esac

  # - echo stack=$STACK
  # - STACK_HPC_ROOT=$($STACK path --local-hpc-root)
  # - STACK_DIST_DIR=$($STACK path --dist-dir)
  # - STACK_TIX=$STACK_HPC_ROOT/codecov-haskell/test-all/test-all.tix
  # - STACK_MIX_DIR=$STACK_DIST_DIR/hpc
  # - echo STACK_TIX=$STACK_TIX
  # - echo STACK_MIX_DIR=$STACK_MIX_DIR
  # - |
  #   $STACK exec -- \
  #     codecov-haskell \
  #       --tix=$STACK_TIX \
  #       --mix-dir=$STACK_MIX_DIR \
  #       --display-report \
  #       test-all

# env:
#   - GHCVER=7.6.3
#   - GHCVER=7.8.3

# before_install:
#   - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
#   - travis_retry sudo apt-get update
#   - travis_retry sudo apt-get install cabal-install-1.20 ghc-$GHCVER happy
#   - export PATH=/opt/ghc/$GHCVER/bin:$PATH

# install:
#   - cabal-1.20 update
#   - travis_retry sudo apt-get -q -y install hlint || cabal-1.20 install hlint
#   - cabal-1.20 install --only-dependencies --enable-tests --enable-benchmarks

# script:
#   - hlint . --ignore="Parse error"
#   - cabal-1.20 configure --enable-tests --enable-benchmarks --enable-library-coverage -v2
#   - cabal-1.20 build
#   - |
#     if [ $GHCVER = "7.8.3" ]; then
#       cabal-1.20 test --show-details=always
#     else
#       dist/build/run-cabal-test/run-cabal-test --cabal-name=cabal-1.20 --show-details=always
#     fi
#   - cabal-1.20 check
#   - cabal-1.20 sdist
#   - export SRC_TGZ=$(cabal-1.20 info . | awk '{print $2 ".tar.gz";exit}') ;
#     (cd dist/;
#     if [ -f "$SRC_TGZ" ]; then
#       cabal-1.20 install "$SRC_TGZ";
#     else
#       echo "expected '$SRC_TGZ' not found";
#       exit 1;
#     fi)

# after_script:
#   - dist/build/codecov-haskell/codecov-haskell test-all
# --exclude-dir=test --display-report --print-response

# notifications:
#   webhooks:
#   urls:
#     - https://webhooks.gitter.im/e/3ff64a7879ffa1a444b6
#   on_success: change
#   on_failure: always
#   on_start: false
